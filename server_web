#!/bin/bash

# Script de instalação de servidor web para Oracle Ampere (ARM64)
# Suporta: Nginx ou Apache, PHP, MySQL/MariaDB
# Por padrão, instala Nginx + PHP-FPM + MariaDB

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Verifica se é root
if [ "$(id -u)" != "0" ]; then
   echo -e "${RED}Este script deve ser executado como root${NC}" 1>&2
   exit 1
fi

# Detecta distro
if [ -f /etc/os-release ]; then
    . /etc/os-release
    OS=$ID
    OS_VERSION=$VERSION_ID
else
    echo -e "${RED}Não foi possível detectar o sistema operacional${NC}"
    exit 1
fi

# Configurações
WEB_SERVER="nginx"  # nginx ou apache
PHP_VERSION="8.1"   # 7.4, 8.0, 8.1, 8.2
DB_SERVER="mariadb" # mariadb ou mysql
INSTALL_COMPOSER=true
INSTALL_WP_CLI=false

# Atualiza sistema
echo -e "${YELLOW}Atualizando o sistema...${NC}"
apt-get update
apt-get upgrade -y

# Instala utilitários básicos
echo -e "${YELLOW}Instalando utilitários...${NC}"
apt-get install -y curl wget git unzip htop

# Instala servidor web
if [ "$WEB_SERVER" = "nginx" ]; then
    echo -e "${YELLOW}Instalando Nginx...${NC}"
    apt-get install -y nginx
    
    # Configura PHP-FPM
    echo -e "${YELLOW}Configurando PHP-FPM...${NC}"
    sed -i "s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/" /etc/php/$PHP_VERSION/fpm/php.ini
    systemctl restart php$PHP_VERSION-fpm
    
    # Configura Nginx para usar PHP-FPM
    cat > /etc/nginx/sites-available/default <<EOF
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    root /var/www/html;
    index index.php index.html index.htm;

    server_name _;

    location / {
        try_files \$uri \$uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php$PHP_VERSION-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }
}
EOF
    
    systemctl restart nginx
    
elif [ "$WEB_SERVER" = "apache" ]; then
    echo -e "${YELLOW}Instalando Apache...${NC}"
    apt-get install -y apache2 libapache2-mod-php$PHP_VERSION
    a2enmod php$PHP_VERSION
    a2enmod rewrite
    systemctl restart apache2
else
    echo -e "${RED}Servidor web não reconhecido: $WEB_SERVER${NC}"
    exit 1
fi

# Instala PHP
echo -e "${YELLOW}Instalando PHP $PHP_VERSION...${NC}"
apt-get install -y php$PHP_VERSION php$PHP_VERSION-fpm php$PHP_VERSION-mysql php$PHP_VERSION-curl \
                   php$PHP_VERSION-gd php$PHP_VERSION-mbstring php$PHP_VERSION-xml php$PHP_VERSION-zip \
                   php$PHP_VERSION-bcmath php$PHP_VERSION-intl

# Instala banco de dados
if [ "$DB_SERVER" = "mariadb" ]; then
    echo -e "${YELLOW}Instalando MariaDB...${NC}"
    apt-get install -y mariadb-server
    mysql_secure_installation
elif [ "$DB_SERVER" = "mysql" ]; then
    echo -e "${YELLOW}Instalando MySQL...${NC}"
    apt-get install -y mysql-server
    mysql_secure_installation
else
    echo -e "${RED}Banco de dados não reconhecido: $DB_SERVER${NC}"
    exit 1
fi

# Instala Composer (opcional)
if [ "$INSTALL_COMPOSER" = true ]; then
    echo -e "${YELLOW}Instalando Composer...${NC}"
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
fi

# Instala WP-CLI (opcional)
if [ "$INSTALL_WP_CLI" = true ]; then
    echo -e "${YELLOW}Instalando WP-CLI...${NC}"
    curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x wp-cli.phar
    mv wp-cli.phar /usr/local/bin/wp
fi

# Cria teste PHP
echo -e "${YELLOW}Criando arquivo de teste PHP...${NC}"
echo "<?php phpinfo(); ?>" > /var/www/html/info.php
chown -R www-data:www-data /var/www/html

# Mostra informações
IP=$(curl -s ifconfig.me)
echo -e "${GREEN}Instalação concluída com sucesso!${NC}"
echo -e "${YELLOW}=================================${NC}"
echo -e "${GREEN}Acesse seu servidor em:${NC}"
echo -e "http://$IP"
echo -e "http://$IP/info.php"
echo -e "${YELLOW}=================================${NC}"
echo -e "${GREEN}Servidor Web:${NC} $WEB_SERVER"
echo -e "${GREEN}PHP Versão:${NC} $PHP_VERSION"
echo -e "${GREEN}Banco de Dados:${NC} $DB_SERVER"
echo -e "${YELLOW}=================================${NC}"
